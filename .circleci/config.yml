version: 2.1
parameters:
  # run_job_build:
  #   type: boolean
  #   default: false
  var1:
    type: string
    default: ''
  var2:
    type: string
    default: ''
workflows:
  version: 2
  ci:
    when: << pipeline.parameters.var1 >>
    jobs:
    - build
    - send-notification
        # requires:
        # - build
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: false
    environment:
      var1: << pipeline.parameters.var1 >>
      var2: << pipeline.parameters.var2 >>
    steps:
      - checkout
      - run:
          name: system info
          command: |
            echo hello
            echo world
            echo goodbye
      - run:
          name: Print environment variables
          command: |
            printenv

      - run:
          name: Fail the job
          command: |
            false

      - run:
          when: always
          name: Store CIRCLE_BUILD_NUM
          command: |
            mkdir -p /tmp/workspace
            echo "$CIRCLE_BUILD_NUM" > /tmp/workspace/CIRCLE_BUILD_NUM

      # # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      # - persist_to_workspace:
      #     # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
      #     # taken to be the root directory of the workspace.
      #     root: /tmp/workspace
      #     # Must be relative path from root
      #     paths:
      #       - CIRCLE_BUILD_NUM

      # - save_cache:
      #     when: always
      #     key: CIRCLE_BUILD_NUM-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      #     paths:
      #     - /tmp/CIRCLE_BUILD_NUM
  send-notification:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    # - attach_workspace:
    #     # Must be absolute path or relative path from working_directory
    #     at: /tmp/workspace

    # - restore_cache:
    #     keys:
    #     - CIRCLE_BUILD_NUM-{{ .Environment.CIRCLE_WORKFLOW_ID }}

    - run:
        name: Send notification
        command: |
          SLEEP=5
          SLEPT=0
          SLEEP_THRESHOLD=7200
          while true; do
              JOB=$( curl -H "Circle-Token: $CIRCLE_API_TOKEN" -H 'Accept: application/json' -X GET "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/job" | jq -r '.items[] | select(.name == "build" or .name == "update")' )
              echo "JOB: $JOB"
              if [ -z "$JOB" ]; then
                  echo "No job name matching 'build' or 'update'"
                  exit 1
              fi

              JOB_STATUS=$( echo -n "$JOB" | jq -r '.status' )
              if [ "$JOB_STATUS" == "success" ] || [ "$JOB_STATUS" == "failed" ]; then
                  echo "Sending notification"
                  JOB_NUMBER=$( echo -n "$JOB" | jq -r '.job_number' )
                  curl -X POST "$NOTIFICATION_WEBHOOK" -H 'Content-Type: application/json' --data "{ \"payload\": { \"build_num\" : $JOB_NUMBER } }"
                  exit 0
              else
                  SLEPT=$(($SLEPT+$SLEEP))
                  if [ "$SLEPT" -ge "$SLEEP_THRESHOLD" ]; then
                      echo "Job has been running too long"
                      exit 1
                  fi
                  echo "Sleeping for $SLEEP seconds before checking again"
                  sleep 5
              fi
          done

# notify:
#   webhooks:
#   - url: https://outlook.office.com/webhook/78418f17-b295-40cc-ae37-bfc91463c01e@4e4f53c4-6f09-4818-9c77-020eeb613480/CircleCI/4a2bb892c6014937ba79528601766b78/51073360-bb16-430e-b8d7-e5f40375df1d
#   - url: https://hooks.slack.com/services/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
#   - url: https://startersclan.com/post-build-beta
